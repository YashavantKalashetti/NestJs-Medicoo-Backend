// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id                       String                     @id @default(uuid())
  name                     String
  patient_number             String                   @unique
  contactNumber            String
  aadharNumber             String                     @unique
  gender                   Gender
  email                    String                     @unique
  dob                      DateTime
  password                 String
  address                  String
  avatar                   String?
  prescriptions            Prescription[]
  appointments             Appointment[]
  medicalDetails           MedicalDetails?
  hospitalsRegistered      Hospital[]                 @relation("PatientHospitals")
  prescriptionAttachementElasticSearch PrescriptionAttachementElasticSearch[]
  parentId                 String?
  parent                   Patient?                   @relation("PatientChildren", fields: [parentId], references: [id], onDelete: SetNull)
  children                 Patient[]                  @relation("PatientChildren")
  primaryDoctors            Doctor[]                    @relation("PrimaryDoctorAndPatients")
  familyDoctorId           String?
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt

  @@map("patients")
}

model MedicalDetails{
  id                       String                     @id @default(uuid())
  patient                  Patient                    @relation(fields: [patientId], references: [id], onDelete: Cascade)
  patientId                String                     @unique
  bloodGroup               String
  height                   Float
  weight                   Float
  allergies                String[]
  medicalHistory           String[]
  systolic                 Int
  diastolic                Int
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt

  @@unique([id, patientId], name: "MedicalDetailsUniqueConstraint")
  @@map("medical_details")

}

model Doctor {
  id                  String               @id @default(uuid())
  name                String
  doctor_number         String               @unique
  contactNumber       String
  gender              Gender
  email               String               @unique
  dob                 DateTime
  password            String
  address             String
  avatar              String?
  consultingFees      Int                  @default(500)
  availableStartTime  String               @default("19:00")
  availableEndTime    String               @default("21:00")
  availableForConsult Boolean              @default(false)
  languages           String[]
  specialization      DoctorSpecialization @default(GENERAL_PRACTITIONER)
  affiliatedHospitals Hospital[]           @relation("DoctorsHospitals")
  attendingHospital   Hospital?            @relation(fields: [attendingHospitalId], references: [id], onDelete: SetNull)
  practicingSince     DateTime             @default(now())
  education           String               @default("MBBS")
  attendingHospitalId String?             
  totalAppointments   Int                  @default(0)
  rating              Float                @default(0.0)
  primaryPatients      Patient[]            @relation("PrimaryDoctorAndPatients")
  prescriptions       Prescription[]       
  appointments        Appointment[]

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt

  @@map("doctors")
}

model Hospital {
  id                 String             @id @default(uuid())
  name               String
  hospital_number      String             @unique
  contactNumber      String
  email              String             @unique
  password           String
  address            String
  description        String     @default("Hospital")
  speciality         HospitalSpeciality @default(GENERAL)
  latitude           Float
  longitude          Float
  registeredDoctors  Doctor[]           @relation("DoctorsHospitals")
  registeredPatients Patient[]          @relation("PatientHospitals")
  availableForConsult Boolean            @default(false)
  attendingDoctors   Doctor[]           
  appointments       Appointment[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@map("hospitals")
}

model Prescription {
  id                        String                     @id @default(uuid())
  patient                   Patient                    @relation(fields: [patientId], references: [id], onDelete: Cascade)
  patientId                 String
  doctor                    Doctor                     @relation(fields: [doctorId], references: [id])
  doctorId                  String
  date                      DateTime                   @default(now())
  medications               Medication[]
  attachments               String[]
  instructionForOtherDoctor String?
  prescriptionType            PrescriptionType             @default(NORMAL)
  status                    PrescriptionStatus         @default(ACTIVE)
  prescriptionAttachementElasticSearch   PrescriptionAttachementElasticSearch[]
  displayable               Boolean                    @default(false)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt

  @@map("prescriptions")
}

model Medication {
  id             String       @id @default(uuid())
  prescription   Prescription @relation(fields: [prescriptionId], references: [id], onDelete: Cascade)
  prescriptionId String
  medicine       String
  dosage         String
  instruction    String
  numberOfTimes  Int          @default(1)
  numberOfDays   Int          @default(1)
  validTill      DateTime     @default(now())
  status         MedicationStatus @default(VALID)

  @@map("medications")
}

model Appointment {
  id         String            @id @default(uuid())
  patient    Patient?           @relation(fields: [patientId], references: [id])
  patientId  String?            
  doctor     Doctor?            @relation(fields: [doctorId], references: [id])
  doctorId   String?
  date       DateTime          @default(now())
  reason     String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  status     AppointmentStatus @default(NORMAL)
  mode       AppointmentMode   @default(ONLINE)
  hospital   Hospital?         @relation(fields: [hospitalId], references: [id])
  hospitalId String?

  // @@unique([patientId, doctorId], name: "appointent_unique_constraint")
  @@map("appointments")
}
model Platform {
  id                 String @id @default(uuid())
  totalPrescriptions Int    @default(0)
  totalAppointments  Int    @default(0)

  @@map("platforms")
}

model PrescriptionAttachementElasticSearch {
  id             String       @id @default(uuid())
  url            String       @unique
  prescription   Prescription @relation(fields: [prescriptionId], references: [id], onDelete: Cascade)
  prescriptionId String
  patient        Patient      @relation(fields: [patientId], references: [id], onDelete: Cascade)
  patientId      String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("prescription_attachments")
}

// Enums used in the schema

enum PrescriptionType {
  NORMAL
  IMPORTANT
}

enum Gender {
  MALE
  FEMALE
}

enum PrescriptionStatus {
  ACTIVE
  INACTIVE
}

enum MedicationStatus {
  VALID
  EXPIRED
}

enum AppointmentStatus {
  NORMAL
  EMERGENCY
  COMPLETED
  CANCLED
}

enum AppointmentMode {
  ONLINE
  OFFLINE
}

enum DoctorSpecialization {
  GENERAL_PRACTITIONER
  ANESTHESIOLOGIST
  CARDIOLOGIST
  DERMATOLOGIST
  EMERGENCY_MEDICINE_PHYSICIAN
  ENDOCRINOLOGIST
  FAMILY_MEDICINE_PHYSICIAN
  GASTROENTEROLOGIST
  GERIATRICIAN
  GYNECOLOGIST
  HEMATOLOGIST
  INFECTIOUS_DISEASE_SPECIALIST
  INTERNIST
  NEONATOLOGIST
  NEPHROLOGIST
  NEUROLOGIST
  OBSTETRICIAN_GYNECOLOGIST
  ONCOLOGIST
  OPHTHALMOLOGIST
  ORTHOPEDIC_SURGEON
  OTOLARYNGOLOGIST
  PEDIATRICIAN
  PHYSICAL_MEDICINE_REHABILITATION_PHYSICIAN
  PLASTIC_SURGEON
  PSYCHIATRIST
  PULMONOLOGIST
  RADIOLOGIST
  RHEUMATOLOGIST
  SURGEON
  UROLOGIST
  ALLERGIST_IMMUNOLOGIST
  INFECTIOUS_DISEASE_PHYSICIAN
}

enum HospitalSpeciality {
  SUPER_SPECIALTY
  MULTI_SPECIALTY
  FERTILITY
  EYE_CARE
  CARDIAC
  NEPHROLOGY
  ONCOLOGY
  GENERAL
  MATERNITY
  ORTHOPEDIC
  NEUROLOGY
  PSYCHIATRY
  PEDIATRIC
  GERIATRIC
  DERMATOLOGY
  GASTROENTEROLOGY
  PULMONOLOGY
  RHEUMATOLOGY
  UROLOGY
  ENT
  DENTAL
  ALLERGY
  ENDOCRINOLOGY
  PLASTIC_SURGERY
  REHABILITATION_CENTER
}
